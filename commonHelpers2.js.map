{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["// let datetimePicker;\n\n// document.addEventListener('DOMContentLoaded', function () {\n\n//      datetimePicker = flatpickr(\"#datetime-picker\", {\n//         enableTime: true,\n//         time_24hr: true,\n//         defaultDate: new Date(),\n//         minuteIncrement: 1,\n//         onClose(selectedDates) {\n//             const selectedDate = selectedDates[0];\n\n//             if (selectedDate && selectedDate > new Date()) {\n//                 document.querySelector('[data-start]').removeAttribute('disabled');\n\n//             } else {\n//                 document.querySelector('[data-start]').setAttribute('disabled', 'disabled');\n//                 iziToast.error({\n//                     title: 'Error',\n//                     message: 'Please choose a date in the future.',\n//                 });\n//             }\n//         },\n//      });\n    \n//     const startButton = document.querySelector('[data-start]');\n//     startButton.setAttribute('disabled', 'disabled');\n// });\n\n\n\n// document.addEventListener('DOMContentLoaded', function () {\n//     document.querySelector('[data-start]').addEventListener('click', function () {\n//         const selectedDate = datetimePicker.selectedDates[0];\n\n//         if (selectedDate && selectedDate > new Date()) {\n//             const intervalId = setInterval(function () {\n//                 const timeRemaining = selectedDate - new Date();\n//                 if (timeRemaining <= 0) {\n//                     clearInterval(intervalId);\n//                     updateTimerUI(0, 0, 0, 0);\n//                     iziToast.success({\n//                         title: 'Success',\n//                         message: 'Countdown completed!',\n//                     });\n//                 } else {\n//                     const { days, hours, minutes, seconds } = convertMs(timeRemaining);\n//                     updateTimerUI(days, hours, minutes, seconds);\n//                 }\n//             }, 1000);\n//         }\n//     });\n// });\n\n// function updateTimerUI(days, hours, minutes, seconds) {\n//     document.querySelector('[data-days]').textContent = addLeadingZero(days);\n//     document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n//     document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n//     document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n// }\n\n// function addLeadingZero(value) {\n//     return value.toString().padStart(2, '0');\n// }\n\n// function convertMs(ms) {\n//     const second = 1000;\n//     const minute = second * 60;\n//     const hour = minute * 60;\n//     const day = hour * 24;\n\n//     const days = Math.floor(ms / day);\n//     const hours = Math.floor((ms % day) / hour);\n//     const minutes = Math.floor(((ms % day) % hour) / minute);\n//     const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n//     return { days, hours, minutes, seconds };\n\n// }\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const datetimePicker = initDatetimePicker();\n\n    const startButton = document.querySelector('[data-start]');\n    startButton.setAttribute('disabled', 'disabled');\n\n    startButton.addEventListener('click', handleStartButtonClick.bind(null, datetimePicker));\n});\n\nfunction initDatetimePicker() {\n    return flatpickr(\"#datetime-picker\", {\n        enableTime: true,\n        time_24hr: true,\n        defaultDate: new Date(),\n        minuteIncrement: 1,\n        onClose(selectedDates) {\n            const selectedDate = selectedDates[0];\n\n            if (selectedDate && selectedDate > new Date()) {\n                document.querySelector('[data-start]').removeAttribute('disabled');\n            } else {\n                document.querySelector('[data-start]').setAttribute('disabled', 'disabled');\n                iziToast.error({\n                    title: 'Error',\n                    message: 'Please choose a date in the future.',\n                });\n            }\n        },\n    });\n}\n\nfunction handleStartButtonClick(datetimePicker) {\n    const selectedDate = datetimePicker.selectedDates[0];\n\n    if (selectedDate && selectedDate > new Date()) {\n        const intervalId = setInterval(() => {\n            const timeRemaining = selectedDate - new Date();\n            if (timeRemaining <= 0) {\n                clearInterval(intervalId);\n                updateTimerUI(0, 0, 0, 0);\n                iziToast.success({\n                    title: 'Success',\n                    message: 'Countdown completed!',\n                });\n            } else {\n                const { days, hours, minutes, seconds } = convertMs(timeRemaining);\n                updateTimerUI(days, hours, minutes, seconds);\n            }\n        }, 1000);\n    }\n}\n\nfunction updateTimerUI(days, hours, minutes, seconds) {\n    document.querySelector('[data-days]').textContent = addLeadingZero(days);\n    document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n    document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n    document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n    return value.toString().padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n"],"names":["datetimePicker","initDatetimePicker","startButton","handleStartButtonClick","selectedDates","selectedDate","intervalId","timeRemaining","updateTimerUI","days","hours","minutes","seconds","convertMs","addLeadingZero","value","ms"],"mappings":"wFAiFA,SAAS,iBAAiB,mBAAoB,IAAM,CAChD,MAAMA,EAAiBC,IAEjBC,EAAc,SAAS,cAAc,cAAc,EACzDA,EAAY,aAAa,WAAY,UAAU,EAE/CA,EAAY,iBAAiB,QAASC,EAAuB,KAAK,KAAMH,CAAc,CAAC,CAC3F,CAAC,EAED,SAASC,GAAqB,CAC1B,OAAO,UAAU,mBAAoB,CACjC,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQG,EAAe,CACnB,MAAMC,EAAeD,EAAc,CAAC,EAEhCC,GAAgBA,EAAe,IAAI,KACnC,SAAS,cAAc,cAAc,EAAE,gBAAgB,UAAU,GAEjE,SAAS,cAAc,cAAc,EAAE,aAAa,WAAY,UAAU,EAC1E,SAAS,MAAM,CACX,MAAO,QACP,QAAS,qCAC7B,CAAiB,EAER,CACT,CAAK,CACL,CAEA,SAASF,EAAuBH,EAAgB,CAC5C,MAAMK,EAAeL,EAAe,cAAc,CAAC,EAEnD,GAAIK,GAAgBA,EAAe,IAAI,KAAQ,CAC3C,MAAMC,EAAa,YAAY,IAAM,CACjC,MAAMC,EAAgBF,EAAe,IAAI,KACzC,GAAIE,GAAiB,EACjB,cAAcD,CAAU,EACxBE,EAAc,EAAG,EAAG,EAAG,CAAC,EACxB,SAAS,QAAQ,CACb,MAAO,UACP,QAAS,sBAC7B,CAAiB,MACE,CACH,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAa,EACjEC,EAAcC,EAAMC,EAAOC,EAASC,CAAO,CAC9C,CACJ,EAAE,GAAI,CACV,CACL,CAEA,SAASJ,EAAcC,EAAMC,EAAOC,EAASC,EAAS,CAClD,SAAS,cAAc,aAAa,EAAE,YAAcE,EAAeL,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcK,EAAeJ,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcI,EAAeH,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcG,EAAeF,CAAO,CACjF,CAEA,SAASE,EAAeC,EAAO,CAC3B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CAC3C,CAEA,SAASF,EAAUG,EAAI,CAMnB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAC1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EACpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EACjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C"}